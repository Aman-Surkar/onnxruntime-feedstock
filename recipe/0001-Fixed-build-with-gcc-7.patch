From 2e0f0437d3b4aeace96725fec8be45364233e3e6 Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Fri, 25 Jun 2021 09:29:01 +0000
Subject: [PATCH] Fixed build with gcc 8

---
 onnxruntime/core/framework/tensor_type_and_shape.cc | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/onnxruntime/core/framework/tensor_type_and_shape.cc b/onnxruntime/core/framework/tensor_type_and_shape.cc
index d00f37f3c..5a8af7a3f 100644
--- a/onnxruntime/core/framework/tensor_type_and_shape.cc
+++ b/onnxruntime/core/framework/tensor_type_and_shape.cc
@@ -29,7 +29,9 @@ ORT_API_STATUS_IMPL(OrtApis::CreateTensorTypeAndShapeInfo, _Outptr_ OrtTensorTyp
 }
 
 ORT_API(void, OrtApis::ReleaseTensorTypeAndShapeInfo, _Frees_ptr_opt_ OrtTensorTypeAndShapeInfo* ptr) {
-  delete ptr;
+  if (ptr != nullptr) {
+    delete ptr;
+  }
 }
 
 ORT_API_STATUS_IMPL(OrtApis::SetTensorElementType, _Inout_ OrtTensorTypeAndShapeInfo* this_ptr,
@@ -143,7 +145,7 @@ ONNXTensorElementDataType MLDataTypeToOnnxRuntimeTensorElementDataType(
 
 OrtStatus* GetTensorShapeAndTypeHelper(ONNXTensorElementDataType type, const onnxruntime::TensorShape shape,
                                        const std::vector<std::string>* dim_params, OrtTensorTypeAndShapeInfo** out) {
-  OrtTensorTypeAndShapeInfo* ret;
+  OrtTensorTypeAndShapeInfo* ret = nullptr;
   if (auto* status = OrtApis::CreateTensorTypeAndShapeInfo(&ret))
     return status;
   if (auto* status = OrtApis::SetTensorElementType(ret, type)) {
@@ -165,7 +167,9 @@ OrtStatus* GetTensorShapeAndTypeHelper(ONNXTensorElementDataType type, const onn
     ret->dim_params.resize(shape.NumDimensions(), "");
   }
 
-  *out = ret;
+  if (ret != nullptr){
+    *out = ret;
+  }
   return nullptr;
 }
 
@@ -251,4 +255,4 @@ ORT_API_STATUS_IMPL(OrtApis::GetTypeInfo, _In_ const OrtValue* v, _Outptr_result
   auto status = OrtTypeInfo::FromOrtValue(*v, out);
   return status;
   API_IMPL_END
-}
\ No newline at end of file
+}
-- 
2.23.0

